fingerprint = imread('s6normal2100.png');
greyFingerprint = rgb2gray(fingerprint);
testfingerprint = imread('s7normal100.png');
ghostGreyFingerprint = rgb2gray(testfingerprint);

%figure
%imshow(greyFingerprint)
%title('Original Fingerprint')

Im=im2double(greyFingerprint);
filteredImage = conv2(greyFingerprint, ones(3,3));
figure; subplot(1,2,1); imshow(filteredImage, []);title('filtered');
subplot(1,2,2); imshow(Im); title('original');

subplot;imshow(testfingerprint);title('Test Fingerprint')

lbpFeatures = extractLBPFeatures(greyFingerprint,'Normalization','None','Radius', 10, 'NumNeighbors', 24);
h=0
[numRows, numCols] = size(greyFingerprint);
cellNum = 1%floor(numRows)*floor(numCols)
for j=1:cellNum   
    h=(j-1)*59+1
    all = sum(lbpFeatures(h:h+554));
   % if h == 1
        relativeValues = lbpFeatures(h:h+554)/all
   % else
   %     relativeValues = [relativeValues lbpFeatures(h:h+58)/all];
   % end
end
%diagram = lbpFeatures/all;


figure
bar(relativeValues);
title ('Histogram of normal');

testlbpFeatures = extractLBPFeatures(ghostGreyFingerprint,'Normalization','None','Radius', 10, 'NumNeighbors', 24);
;
g=0
[numRows, numCols] = size(ghostGreyFingerprint);
cellNum = 1%floor(numRows)*floor(numCols)
for g=1:cellNum   
    g=(j-1)*59+1
    all = sum(testlbpFeatures(g:g+554));
   % if h == 1
        testRelativeValues = testlbpFeatures(g:g+554)/all
   % else
   %     relativeValues = [relativeValues lbpFeatures(h:h+58)/all];
   % end
end

m = size(relativeValues,1);  n = size(testRelativeValues,1);
mOnes = ones(1,m); D = zeros(m,n);
for i=1:n
  yi = testRelativeValues(i,:);  yiRep = yi( mOnes, : );
  s = yiRep + relativeValues;    d = yiRep - relativeValues;
  D(:,i) = sum( d.^2 ./ (s+eps), 2 );
end
D = D/2;